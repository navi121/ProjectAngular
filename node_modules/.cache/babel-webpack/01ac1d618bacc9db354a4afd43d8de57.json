{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/NaveenNatarajan/Desktop/Project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(userService, router, formBuilder) {\n    this.userService = userService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      Email: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n    this.returnUrl = '/home';\n    this.userService.logout();\n    this.resetForm();\n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  Login() {\n    // stop here if form is invalid  \n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      if (this.f.Email.value == this.login.Email && this.f.Password.value == this.login.Password) {\n        console.log(\"Login successful\");\n        localStorage.setItem('isLoggedIn', \"true\");\n        this.router.navigate([this.returnUrl]);\n      } else {\n        this.message = \"Please check your userid and password\";\n      }\n    }\n  }\n\n  resetForm(form) {\n    if (form != null) form.reset();\n    this.login = {\n      Email: '',\n      Password: ''\n    };\n  }\n\n  OnSubmit(form) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.userService.loginUser(form.value).subscribe(() => {\n        // sessionStorage.setItem('loggedUser', this.login.Email);\n        //this.userService.loginUser(this.loginUser.Email);\n        _this.router.navigateByUrl('home');\n\n        _this.resetForm(form);\n      });\n    })();\n  }\n\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"sources":["C:\\Users\\NaveenNatarajan\\Desktop\\Project\\src\\app\\navbar\\navbar.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAAkC,eAAlC;AAMA,SAAiC,UAAjC,QAAmD,gBAAnD;AAMA,IAAa,cAAc,GAA3B,MAAa,cAAb,CAA2B;AAOzB,EAAA,WAAA,CAA2B,WAA3B,EACkB,MADlB,EAEU,WAFV,EAEkC;AAFP,SAAA,WAAA,GAAA,WAAA;AACT,SAAA,MAAA,GAAA,MAAA;AACR,SAAA,WAAA,GAAA,WAAA;AAA6B;;AAEhC,EAAA,QAAQ,GAAA;AACb,SAAK,SAAL,GAAiB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACtC,MAAA,KAAK,EAAE,CAAC,EAAD,EAAK,UAAU,CAAC,QAAhB,CAD+B;AAEtC,MAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,UAAU,CAAC,QAAhB;AAF4B,KAAvB,CAAjB;AAIA,SAAK,SAAL,GAAiB,OAAjB;AACA,SAAK,WAAL,CAAiB,MAAjB;AACA,SAAK,SAAL;AACD;;AACI,MAAD,CAAC,GAAA;AAAK,WAAO,KAAK,SAAL,CAAe,QAAtB;AAAiC;;AAC3C,EAAA,KAAK,GAAA;AAEH;AACA,QAAI,KAAK,SAAL,CAAe,OAAnB,EAA4B;AACzB;AACF,KAFD,MAGK;AACF,UAAI,KAAK,CAAL,CAAO,KAAP,CAAa,KAAb,IAAsB,KAAK,KAAL,CAAW,KAAjC,IAA0C,KAAK,CAAL,CAAO,QAAP,CAAgB,KAAhB,IAAyB,KAAK,KAAL,CAAW,QAAlF,EAA4F;AACzF,QAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ;AACA,QAAA,YAAY,CAAC,OAAb,CAAqB,YAArB,EAAmC,MAAnC;AACA,aAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,KAAK,SAAN,CAArB;AACF,OAJD,MAKE;AACF,aAAK,OAAL,GAAe,uCAAf;AACC;AACD;AACF;;AAEI,EAAA,SAAS,CAAC,IAAD,EAAc;AAC5B,QAAI,IAAI,IAAI,IAAZ,EACE,IAAI,CAAC,KAAL;AACF,SAAK,KAAL,GAAa;AACX,MAAA,KAAK,EAAE,EADI;AAEX,MAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEY,EAAA,QAAQ,CAAC,IAAD,EAAa;AAAA;;AAAA;AAChC,MAAA,KAAI,CAAC,WAAL,CAAiB,SAAjB,CAA2B,IAAI,CAAC,KAAhC,EACG,SADH,CACa,MAAK;AACd;AACA;AACA,QAAA,KAAI,CAAC,MAAL,CAAY,aAAZ,CAA0B,MAA1B;;AACA,QAAA,KAAI,CAAC,SAAL,CAAe,IAAf;AACD,OANH;AADgC;AAQjC;;AAxDwB,CAA3B;AAAa,cAAc,GAAA,UAAA,CAAA,CAL1B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,WADD;AAET,EAAA,WAAW,EAAE,wBAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,uBAAD;AAHF,CAAD,CAKiB,CAAA,EAAd,cAAc,CAAd;SAAA,c","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ErrormessageComponent } from '../errormessage/errormessage.component';\nimport { UserLog } from '../shared/user.model';\nimport { UserService } from '../shared/user.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public login: UserLog;\n  public loginUser: any;\n  public loginForm: FormGroup;\n  public returnUrl: string;\n  private message:string;\n  public constructor(private userService: UserService,\n    public readonly router: Router,\n    private formBuilder: FormBuilder) { }\n\n  public ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      Email: ['', Validators.required],\n      Password: ['', Validators.required]\n    });\n    this.returnUrl = '/home';\n    this.userService.logout();\n    this.resetForm();\n  }\n  get f() { return this.loginForm.controls; }\n  Login() {  \n  \n    // stop here if form is invalid  \n    if (this.loginForm.invalid) {  \n       return;  \n    }  \n    else {  \n       if (this.f.Email.value == this.login.Email && this.f.Password.value == this.login.Password) {  \n          console.log(\"Login successful\");    \n          localStorage.setItem('isLoggedIn', \"true\");  \n          this.router.navigate([this.returnUrl]);  \n       }  \n    else {  \n       this.message = \"Please check your userid and password\";  \n       }  \n      }  \n    }\n\n  public resetForm(form?: NgForm) {\n    if (form != null)\n      form.reset();\n    this.login = {\n      Email: '',\n      Password: '',\n    }\n  }\n\n  public async OnSubmit(form: NgForm): Promise<void> {\n    this.userService.loginUser(form.value)\n      .subscribe(() => {\n        // sessionStorage.setItem('loggedUser', this.login.Email);\n        //this.userService.loginUser(this.loginUser.Email);\n        this.router.navigateByUrl('home');\n        this.resetForm(form);\n      });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}