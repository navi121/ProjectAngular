{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/NaveenNatarajan/Desktop/Project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class ResetpasswordComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  resetForm(form) {\n    if (form != null) form.reset();\n    this.reset = {\n      Password: ''\n    };\n  }\n\n  OnSubmit(form) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.userService.resetUser(form.value).subscribe(() => {\n        // sessionStorage.setItem('loggedUser', this.login.Email);\n        //this.userService.loginUser(this.loginUser.Email);\n        _this.router.navigateByUrl('home');\n\n        _this.resetForm(form);\n      });\n    })();\n  }\n\n}\n\nResetpasswordComponent.ɵfac = function ResetpasswordComponent_Factory(t) {\n  return new (t || ResetpasswordComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nResetpasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResetpasswordComponent,\n  selectors: [[\"app-resetpassword\"]],\n  decls: 20,\n  vars: 1,\n  consts: [[\"src\", \"../pickawood-gf8e6XvG_3E-unsplash.jpg\", 1, \"img\"], [1, \"center\"], [\"method\", \"post\", \"onSubmit\", \"checkPassword(this)\", 1, \"col\", \"s12\", \"white\", 3, \"ngSubmit\"], [\"log\", \"ngForm\"], [1, \"txt_field\"], [\"type\", \"text\", \"name\", \"password1\", \"required\", \"\", \"minlength\", \"3\", 1, \"validate\"], [\"type\", \"text\", \"name\", \"password2\", \"required\", \"\", \"minlength\", \"3\", 1, \"validate\", 3, \"ngModel\", \"ngModelChange\"], [\"Password\", \"ngModel\"], [\"type\", \"submit\", \"value\", \"Reset\", \"href\", \"../home-page/home-page.component.html\"], [1, \"signup_link\"]],\n  template: function ResetpasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"body\");\n      i0.ɵɵelement(1, \"img\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"h1\");\n      i0.ɵɵtext(4, \"Reset Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function ResetpasswordComponent_Template_form_ngSubmit_5_listener() {\n        i0.ɵɵrestoreView(_r2);\n\n        const _r0 = i0.ɵɵreference(6);\n\n        return ctx.OnSubmit(_r0);\n      });\n      i0.ɵɵelementStart(7, \"div\", 4);\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelement(9, \"span\");\n      i0.ɵɵelementStart(10, \"label\");\n      i0.ɵɵtext(11, \"New Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 4);\n      i0.ɵɵelementStart(13, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ResetpasswordComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.reset.Password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"span\");\n      i0.ɵɵelementStart(16, \"label\");\n      i0.ɵɵtext(17, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 8);\n      i0.ɵɵelement(19, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.reset.Password);\n    }\n  },\n  directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.RequiredValidator, i3.MinLengthValidator, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZXNldHBhc3N3b3JkLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"sources":["C:\\Users\\NaveenNatarajan\\Desktop\\Project\\src\\app\\resetpassword\\resetpassword.component.ts","C:\\Users\\NaveenNatarajan\\Desktop\\Project\\src\\app\\resetpassword\\resetpassword.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../shared/user.service';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements OnInit {\n\n  public reset: Reset;\n\n  constructor(private userService : UserService,\n    public readonly router: Router) { }\n\n  ngOnInit(): void {\n    this.resetForm();\n  }\n\n  public resetForm(form?: NgForm) {\n    if (form != null)\n      form.reset();\n    this.reset = {\n     Password:'',\n    }\n  }\n\n  public async OnSubmit(form: NgForm): Promise<void> {\n    this.userService.resetUser(form.value)\n    .subscribe(()=>{\n      // sessionStorage.setItem('loggedUser', this.login.Email);\n      //this.userService.loginUser(this.loginUser.Email);\n     this.router.navigateByUrl('home');\n    this.resetForm(form);\n    });\n  }\n\n}\n","<body>\n    <img src=\"../pickawood-gf8e6XvG_3E-unsplash.jpg\" class=\"img\">\n        <div class=\"center\">\n        <h1>Reset Password</h1>\n        <form method=\"post\" class=\"col s12 white\" #log=\"ngForm\" (ngSubmit)=\"OnSubmit(log)\" onSubmit = \"checkPassword(this)\">\n            <div class=\"txt_field\">\n                <input  class=\"validate\" type=\"text\" name=\"password1\"  required  minlength=\"3\">\n                <span></span>\n                <label>New Password</label>\n              </div>\n              <div class=\"txt_field\">\n                <input  class=\"validate\" type=\"text\" name=\"password2\" #Password=\"ngModel\" [(ngModel)]=\"reset.Password\" required  minlength=\"3\">\n                <span></span>\n                <label>Confirm Password</label>\n              </div>\n              <input type=\"submit\" value=\"Reset\" href=\"../home-page/home-page.component.html\">\n               <div class=\"signup_link\">\n             </div>\n        </form>\n      </div>\n      \n    </body>\n    <script>\n          \n        // Function to check Whether both passwords\n        // is same or not.\n        function checkPassword(form) {\n            password1 = form.password1.value;\n            password2 = form.password2.value;\n\n            // If password not entered\n            if (password1 == '')\n                alert (\"Please enter Password\");\n                  \n            // If confirm password not entered\n            else if (password2 == '')\n                alert (\"Please enter confirm password\");\n                  \n            // If Not same return False.    \n            else if (password1 != password2) {\n                alert (\"\\nPassword did not match: Please try again...\")\n                return false;\n            }\n\n            // If same return True.\n            else{\n                alert(\"Password Match: Welcome to GeeksforGeeks!\")\n                return true;\n            }\n        }\n    </script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}